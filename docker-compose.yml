services:
  builder:
    image: ghcr.io/r2d2bzh/docker-build-nodejs-builder:${VERSION:-dev}
    build:
      context: builder
      args:
        NODE_JS_VERSION: ${NODE_JS_VERSION}
        NPM_VERSION: ${NPM_VERSION}
    entrypoint: ["tail", "-f", "/dev/null"]

  runtime:
    image: ghcr.io/r2d2bzh/docker-build-nodejs-runtime:${VERSION:-dev}
    build:
      context: runtime
    profiles:
      - disabled

  test-config:
    build:
      context: test/config
    volumes:
      - ./test/config/config:/home/nonroot/config
    profiles:
      - test

  test-dynamic:
    build:
      context: test/dynamic
    profiles:
      - test

  test-esm:
    build:
      context: test/esm
    profiles:
      - test

  test-pkg-options:
    build:
      context: test/pkg-options
      args:
        PKG_OPTIONS: -o /tmp/moved-service
    profiles:
      - test

  # This one is just a satellite of test-share.
  # Do not use it as a test case.
  test-share-index:
    build:
      context: test/share/index
    profiles:
      - test

  # This one must be declared after test-share-index
  # to guarantee the build order.
  test-share:
    build:
      context: test/share/context
    profiles:
      - test

  test-sharp:
    build:
      context: test/sharp
    profiles:
      - test

  # tag::test-simple[]
  test-simple:
    build:
      context: test/simple
      args:
        main: simple.js
  # end::test-simple[]
    profiles:
      - test

  test-wrtc:
    build:
      context: test/wrtc
    profiles:
      - test

  test:
    image: busybox
    command: ["echo", "all tests were passed successfully"]
    depends_on:
      test-config: { condition: service_completed_successfully }
      test-dynamic: { condition: service_completed_successfully }
      test-esm: { condition: service_completed_successfully }
      test-pkg-options: { condition: service_completed_successfully }
      test-share: { condition: service_completed_successfully }
      test-sharp: { condition: service_completed_successfully }
      test-simple: { condition: service_completed_successfully }
      test-wrtc: { condition: service_completed_successfully }
    profiles:
      - test

  devenv:
    image: ghcr.io/r2d2bzh/docker-build-nodejs-devenv:${VERSION:-dev}
    build:
      context: devenv
      args:
        NODE_JS_VERSION: ${NODE_JS_VERSION}
        NPM_VERSION: ${NPM_VERSION}

  #tag::dev[]
  dev:
    build:
      context: dev
      args:
        USER: ${LOGNAME}
        UID: ${UID}
        GID: ${GID}
    volumes:
      - .:/home/user/dev
  #end::dev[]
